{!
/*
* Copyright 2010-2012 Research In Motion Limited.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
!}
var menuHasSelected, 
    localStore, 
    localStoreAvailable, 
    setup, 
    Storage, 
    menu_map,
    menu_link_map, 
    default_menu,

    index_menu  = [ 
                    {"children": [], "alt": "", "link": "{+(new TextLink()).toFile("classes.html")+}", "id": "class", "title": "All classes"}, 
                    {"children": [], "alt": "Classes sorted via topics", "link": "{+(new TextLink()).toFile("topics.html")+}", "id": "topics", "title": "Topics"},
                    {"children": [], "alt": "", "link": "{+(new TextLink()).toFile("bb_index.html")+}", "id": "bb", "title": "BlackBerry OS"}, 
                    {"children": [], "alt": "", "link": "{+(new TextLink()).toFile("pb_index.html")+}", "id": "pb", "title": "BlackBerry PlayBook OS"},
                    {"children": [], "alt": "", "link": "{+(new TextLink()).toFile("bb10_index.html")+}", "id": "bb10", "title": "BlackBerry 10 OS"}
                  ],

    class_menu  = {+ JSON.stringify(buildClassMenu(data)) +},
    topics_menu = {+ JSON.stringify(buildTopicsMenu(data)) +},
    bb_menu     = {+ JSON.stringify(buildClassMenu(data, function (element) { return element.support && element.support.hasBBSupport()})) +},
    pb_menu     = {+ JSON.stringify(buildClassMenu(data, function (element) { return element.support && element.support.hasPBSupport()})) +},
    bb10_menu   = {+ JSON.stringify(buildClassMenu(data, function (element) { return element.support && element.support.hasBB10XSupport()})) +};

menu_link_map = {
    "index_menu":   "{+(new TextLink()).toFile("index.html")+}",
    "class_menu":   "{+(new TextLink()).toFile("classes.html")+}",
    "topics_menu":  "{+(new TextLink()).toFile("topics.html")+}",
    "bb_menu":      "{+(new TextLink()).toFile("bb_index.html")+}",
    "pb_menu":      "{+(new TextLink()).toFile("pb_index.html")+}",
    "bb10_menu":    "{+(new TextLink()).toFile("bb10_index.html")+}"
};

menu_map = {
    "index_menu":   index_menu,
    "class_menu":   class_menu,
    "topics_menu":  topics_menu,
    "bb_menu":      bb_menu,
    "pb_menu":      pb_menu,
    "bb10_menu":    bb10_menu
};

default_menu = "topics_menu";

menus = ["index_menu", "class_menu", "topics_menu", "bb_menu", "pb_menu", "bb10_menu"];

is_ie7 = $('html').hasClass('ie7');
classAttr = 'class';
if (is_ie7) {
  classAttr = 'className';
}

function getCookie(cookie_name) {
    var results = document.cookie.match('(^|;) ?'+cookie_name+'=([^;]*)(;|$)');
    if (results) {
        return (unescape(results[2]));
    }
    else {
        return null;
    }
}

menuHasSelected = null;
localStore = null;
Storage = {
    setup : function() {
        localStorageAvailable = false;
        if (Modernizr.localstorage) {
            localStorageAvailable = true;
            localStore = window.localStorage;
            localStore.setItem('ran','once');
        } else {
            
        }
    },
    add:function(key,item) {
        if (localStorageAvailable) {
            localStore[key] = item;
        } else {
            /* TODO: Dynamic expire date of cookies */ 
            document.cookie = key+'='+item+'; expires=Fri, 10 Feb 2012 02:47:11 UTC; path=/'
        }
    },
    get:function(key) {
        if (localStorageAvailable) {
            if (key in localStore) {
                return localStore[key];
            } else {
                return null;
            }
        } else {
            return getCookie(key);
        }
    }
};

store = Storage;
store.setup();

function menuItemToHtml(menuItem, selected_url, level) {
    var li, a, span, txt, ult;
    li = document.createElement('li');
    a = document.createElement('a');
    a.setAttribute('href', menuItem['link']);
    a.setAttribute(classAttr, 'menu_link');
    span = document.createElement('span');
    if (menuItem['link'] == selected_url) {
        menuHasSelected = true;
        span.setAttribute(classAttr, 'item active');
    } else {
        span.setAttribute(classAttr, 'item');
    }
    
    if ("alt" in menuItem) {
        a.setAttribute('title',menuItem['alt']);
    }
    txt = document.createTextNode(menuItem['title']);
    a.appendChild(txt);
    span.appendChild(a);
    li.appendChild(span);
    if (menuItem['children'].length > 0) {
        ult = createListFromMenu(menuItem['children'], selected_url, level+1);
        li.appendChild(ult);
    }
    return li;
}

function createUl(level) {
    var ul = document.createElement('ul');
    ul.setAttribute(classAttr, 'lv_'+level+' clearfix');
    return ul;
}


function createSubsection(name) {
    var txt, el, header;
    el = document.createElement('div');
    el.setAttribute(classAttr,'side-nav-sub_section clearfix');
    if (name != null) {
        txt = document.createTextNode(name);
        header = document.createElement('h3');
        header.appendChild(txt);
        el.appendChild(header);
    }
    return el;
}

function createListFromMenu(menu, selected, level) {
    var ul, mItem, el, i;
    ul = createUl(level);
    for (i = 0; i < menu.length; i++) {
        mItem = menu[i];
        el = menuItemToHtml(mItem, selected, level);
        ul.appendChild(el);
    }
    if (menuHasSelected) {
        ul.setAttribute(classAttr, ul.getAttribute(classAttr)+' child_active');
        menuHasSelected = false;
    }
    
    return ul;
}

function createPrimaryMenu(menu, selected_menu) {
    var ul;
	ul = createListFromMenu(menu_map[menu],menu_link_map[selected_menu], 1);
    if (menuHasSelected != null) {
        menuHasSelected = null;
    }
    return ul;
}

function initMenu(selected_url, menu_to_load) {
    var sideNavPar, sideNavCh, prim, menu, sub, mi, ul, temp_ul, stored, selected, i;
    sideNavPar = document.getElementById('side-nav-parents');
    sideNavCh = document.getElementById('side-nav-children');
    
    if (menu_to_load != null) {
        menu = menu_map[menu_to_load];
        store.add('selectedmenu', menu_to_load)
    } else {
        stored = store.get('selectedmenu');
        if (stored == null) {
            menu = menu_map[default_menu];
            store.add('selectedmenu', default_menu)
        } else {
            menu = menu_map[stored];
            store.add('selectedmenu', stored);
        }
    }
	stored = store.get('selectedmenu');
	selected = stored != null ? stored : default_menu;
    prim = createPrimaryMenu('index_menu',selected);
    sideNavPar.appendChild(prim);
	$('#side-nav-parents').removeClass('loading');
    temp_ul = createUl(1);
    for (i = 0; i < menu.length; i++) {
        mi = menu[i];
        if (mi["subsection"] == true) {
            if (temp_ul.children.length > 0) {
                sub = createSubsection(null);
                if (menuHasSelected) {
                    temp_ul.setAttribute(classAttr, temp_ul.getAttribute(classAttr)+' child_active');
                }
                sub.appendChild(temp_ul);
                sideNavCh.appendChild(sub);
                temp_ul = createUl(0);
            }
            sub = createSubsection(mi['title']);
            ul = createListFromMenu(mi['children'], selected_url, 1);
            
            sub.appendChild(createListFromMenu(mi['children'], selected_url, 1));
            sideNavCh.appendChild(sub);
            if (menuHasSelected) {
                menuHasSelected = false;
            }
        } else {
            temp_ul.appendChild(menuItemToHtml(mi,selected_url, 1));
        }
    }
    if (temp_ul.children.length > 0) {
        sub = createSubsection(null);
        if (menuHasSelected) {
            temp_ul.setAttribute(classAttr, temp_ul.getAttribute(classAttr)+' child_active');
        }
        sub.appendChild(temp_ul);
        sideNavCh.appendChild(sub);
    }
    $('#side-nav-children').removeClass('loading');
}
